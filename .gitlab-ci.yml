workflow:
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[skip pipeline\]/
      when: never
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - when: always

## Pipeline stages ##
stages:
- compile
- find-cluster
- deploy
- pa-was-test
- integration-test
- chaos
- cleanup

## Global environment variables ##
variables:
  DELETE_ENV_AFTER_PIPELINE: 'true'
  K8S_DEPLOY_TOOLS: docker.corp.pingidentity.com:5000/platform-pipeline/k8s-deploy-tools:1.19.5.0
  SHARED_CI_SCRIPTS_DIR: "/ci-scripts"

## Compile stage ##
compile:
 stage: compile
 tags:
   - default-gitlab-runner
 image: ${K8S_DEPLOY_TOOLS}
 script:
   - ${SHARED_CI_SCRIPTS_DIR}/k8s/compile/compile.sh

## Find cluster stage ##
find-cluster:
  stage: find-cluster
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/k8s/deploy/find_cluster.sh
  artifacts:
    reports:
      dotenv: cluster.env

## Deploy stage ##
deploy:
  stage: deploy
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/k8s/deploy/deploy.sh
  dependencies:
    - find-cluster

## Integration Test stage ##

## PA-WAS stage ##
pa-was-integration-tests:
  stage: pa-was-test
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/test/run-tests.sh pingaccess-was
  dependencies:
    - find-cluster

################################################
# All integration tests defined to run on the  #
# traditionally deployed P1AS                  #
################################################
.all-tests: &all-tests
  - pingdirectory
  - pingdelegator
  - pingfederate
  - pingaccess
  - pingcloud-services
  # - pingcentral        (will be re-added when PingCentral is added to CI/CD)
  - pingdatasync
  - common
  - monitoring
  - health
  - pingone

.integration-tests-base:
  variables:
    TEST: ""
  stage: integration-test
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/test/run-tests.sh ${TEST}
  dependencies:
    - find-cluster
  artifacts:
    name: "integration_test_logs"
    paths:
      - tests/pingone/latest_logs/
    when: on_failure

integration-tests:
  extends: .integration-tests-base
  variables:
    TEST: ${TEST}
  parallel:
    matrix:
      - TEST: *all-tests

## Chaos testing stage ##
chaos-tests:
  stage: chaos
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/test/run-tests.sh chaos
  dependencies:
    - find-cluster

## Cleanup stage ##
cleanup:
  stage: cleanup
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/k8s/cleanup/teardown.sh
  dependencies:
    - find-cluster